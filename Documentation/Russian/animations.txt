В UniPy вы можете легко создавать анимации для объектов, такие как изменение их положения, размера и других свойств, без необходимости использовать много кода.

Класс Object позволяет анимировать свойства, такие как x, y, ширина, высота, угол, прозрачность и цвет. Аналогично, для класса Text вы можете анимировать свойства, такие как x, y, угол, прозрачность, размер шрифта и цвет.

Вы можете добавлять анимации к объектам с помощью кода, как показано в следующем примере:

```python
import UniPy as up

obj = up.GetObj("circle")
obj.AddAnim([5], "angle = 180", [None], [None], True)
```

В этом фрагменте кода мы получаем объект и применяем анимацию с использованием функции `AddAnim`, которая добавляет анимацию в очередь.

- Первый аргумент определяет скорость анимации. В данном случае угол объекта будет увеличиваться на 5 единиц за кадр.
- Второй аргумент определяет сами анимации. Несколько анимаций могут быть объединены, например:

```python
obj.AddAnim([5, 10], "angle = 180; x = 200", [None, None])
```

Эти две анимации будут выполняться параллельно.
- Третий аргумент указывает функцию для выполнения по завершении анимации (None: ничего).
- Четвертый аргумент указывает функции для выполнения во время каждой итерации анимации.
- Пятый аргумент управляет выравниванием. Если ваш объект изначально был выровнен по cx или cy, установка этого значения в True выровняет анимацию по x и y (по умолчанию - False).

Как упоминалось ранее, функция `AddAnim` добавляет анимации в очередь, выполняясь последовательно от первой к последней. Объект автоматически запускает следующую анимацию, как только завершается текущая.