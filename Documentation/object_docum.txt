Объект в UniPy представляет собой сущность, которая может быть помещена на игровую сцену и взаимодействовать с другими объектами в окружающей среде. Для того чтобы облегчить работу с объектом в эдиторе, были созданы компоненты, которые можно редактировать.

Перечень компонентов объекта, которые можно отредактировать в эдиторе, включает в себя следующие параметры:

    x: координата по оси X, задающая позицию объекта на игровой сцене.
    y: координата по оси Y, задающая позицию объекта на игровой сцене.
    
    width: ширина объекта.
    height: высота объекта.
    
    angle: угол, под которым объект отображается на экране.
    
    bodyType: тип тела объекта: None - просто объект, dynamic - физическое тело, static - статическое тело, как стена.
    
    transparent: прозрачность объекта.
    
    render: если значение этого параметра равно False, то объект не будет отображаться на экране.
    
    flipX: если значение этого параметра равно True, то объект будет отражен по горизонтальной оси.
    
    flipY: если значение этого параметра равно True, то объект будет отражен по вертикальной оси.
    
    image: изображение, которое будет отображаться на объекте.
    
    cx: центрирование объекта по оси X по определенным сторонам: right - центрирование с правой стороны экрана, left - с левой, centerx - с центра экрана,objX(ObjectName) - с позиции объетка по оси X.
    
    cy: центрирование объекта по оси Y по определенным сторонам: top - центрирование с верхней стороны экрана, bottom - с нижней, centery - с центра экрана, objY(ObjectName) - с позиции объетка по оси Y.
    
Стоит отметить, если у вашего обьекта тип тела dynamic, то его позицию лучше изменять не через x & y, а через rect.x, rect.y, чтобы физика обрабатывалась нормально. [это касается только кода]

Пример:
```
def Update():
    player.rect.x += 1
```

Еще, обьект будет центрироваться только при старте программы! И чтобы еще раз отцентрировать объект по его параметрам, нужно будет в коде вызывать функцию, их две - setPos: right, left, top, bottom, centerx, centery, setPosObject: objX, objY.

Также для объекта в UniPy доступны различные события, такие как нажатие на объект и отпускание объекта. Эти события могут быть обработаны с помощью соответствующих функций.

Функция onPressed будет вызываться при нажатии на объект. Для этой функции можно указать аргументы в свойстве pressedContent объекта.

Функция onUnPressed будет вызываться при отпускании объекта. Для этой функции можно указать аргументы в свойстве UnPressedContent объекта.

Например, чтобы изменить размер объекта при нажатии и отпускании, можно использовать следующий код:

```
def resize(amount):
    player.width += amount
    player.height += amount

player.onPressed = resize
player.onPressedContent = "(10)"
player.onUnPressed = resize
player.onUnPressedContent = "(-10)"
```

Функция resize принимает один аргумент - количество пикселей, на которое нужно изменить размер объекта. При нажатии на объект вызывается функция resize с аргументом 10, что приводит к увеличению размеров объекта на 10 пикселей. При отпускании объекта вызывается функция resize с аргументом -10, что возвращает объект к исходным размерам.

Еще есть метод pressed, который возвращает True, если данный объект был нажат пользователем в текущем кадре. Этот метод может быть использован в условном операторе для выполнения каких-либо действий при нажатии на объект. Например, можно изменить позицию объекта, увеличив его координату по оси X на 1, как показано в данном коде:

```
def Update():
    if player.pressed():
        player.x += 1
```

Знание метода pressed() позволяет эффективно управлять поведением объекта в игре и создавать интерактивные элементы пользовательского интерфейса

Знание этих параметров позволяет эффективно управлять объектом в движке и настраивать его поведение в игре. При желании можно задать параметры как вручную через код, так и воспользоваться возможностями эдитора, что упрощает процесс создания игровых объектов и ускоряет разработку игры в целом.